/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 1);
/******/ })
/************************************************************************/
/******/ ({

/***/ "./assets/source/js/algolia-autocomplete.js":
/*!**************************************************!*\
  !*** ./assets/source/js/algolia-autocomplete.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("jQuery(function () {\n  /* Check if algolia is running */\n  if (typeof algoliasearch !== \"undefined\") {\n    /* init Algolia client */\n    var client = algoliasearch(algolia.application_id, algolia.search_api_key);\n    /* setup default sources */\n\n    var sources = [];\n    jQuery.each(algolia.autocomplete.sources, function (i, config) {\n      var suggestion_template = wp.template(config.tmpl_suggestion);\n      sources.push({\n        source: algoliaAutocomplete.sources.hits(client.initIndex(config.index_name), {\n          hitsPerPage: config.max_suggestions,\n          attributesToSnippet: ['content:10'],\n          highlightPreTag: '__ais-highlight__',\n          highlightPostTag: '__/ais-highlight__'\n        }),\n        templates: {\n          header: function header() {\n            return wp.template('autocomplete-header')({\n              label: _.escape(config.label)\n            });\n          },\n          suggestion: function suggestion(hit) {\n            for (var key in hit._highlightResult) {\n              /* We do not deal with arrays. */\n              if (typeof hit._highlightResult[key].value !== 'string') {\n                continue;\n              }\n\n              hit._highlightResult[key].value = _.escape(hit._highlightResult[key].value);\n              hit._highlightResult[key].value = hit._highlightResult[key].value.replace(/__ais-highlight__/g, '<em>').replace(/__\\/ais-highlight__/g, '</em>');\n            }\n\n            for (var key in hit._snippetResult) {\n              /* We do not deal with arrays. */\n              if (typeof hit._snippetResult[key].value !== 'string') {\n                continue;\n              }\n\n              hit._snippetResult[key].value = _.escape(hit._snippetResult[key].value);\n              hit._snippetResult[key].value = hit._snippetResult[key].value.replace(/__ais-highlight__/g, '<em>').replace(/__\\/ais-highlight__/g, '</em>');\n            }\n\n            return suggestion_template(hit);\n          }\n        }\n      });\n    });\n    /* Setup dropdown menus */\n\n    jQuery(\".search-top \" + algolia.autocomplete.input_selector + \", #site-header \" + algolia.autocomplete.input_selector + \", .hero \" + algolia.autocomplete.input_selector).each(function (i) {\n      var $searchInput = jQuery(this);\n      var config = {\n        debug: algolia.debug,\n        hint: false,\n        openOnFocus: true,\n        appendTo: 'body',\n        templates: {\n          empty: wp.template('autocomplete-empty')\n        }\n      };\n\n      if (algolia.powered_by_enabled) {\n        config.templates.footer = wp.template('autocomplete-footer');\n      }\n      /* Instantiate autocomplete.js */\n\n\n      var autocomplete = algoliaAutocomplete($searchInput[0], config, sources).on('autocomplete:selected', function (e, suggestion) {\n        /* Redirect the user when we detect a suggestion selection. */\n        window.location.href = suggestion.permalink;\n      });\n      /* Force the dropdown to be re-drawn on scroll to handle fixed containers. */\n\n      jQuery(window).scroll(function () {\n        if (autocomplete.autocomplete.getWrapper().style.display === \"block\") {\n          autocomplete.autocomplete.close();\n          autocomplete.autocomplete.open();\n        }\n      });\n    });\n    jQuery(document).on(\"click\", \".algolia-powered-by-link\", function (e) {\n      e.preventDefault();\n      window.location = \"https://www.algolia.com/?utm_source=WordPress&utm_medium=extension&utm_content=\" + window.location.hostname + \"&utm_campaign=poweredby\";\n    });\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hc3NldHMvc291cmNlL2pzL2FsZ29saWEtYXV0b2NvbXBsZXRlLmpzPzU1MDQiXSwibmFtZXMiOlsialF1ZXJ5IiwiYWxnb2xpYXNlYXJjaCIsImNsaWVudCIsImFsZ29saWEiLCJhcHBsaWNhdGlvbl9pZCIsInNlYXJjaF9hcGlfa2V5Iiwic291cmNlcyIsImVhY2giLCJhdXRvY29tcGxldGUiLCJpIiwiY29uZmlnIiwic3VnZ2VzdGlvbl90ZW1wbGF0ZSIsIndwIiwidGVtcGxhdGUiLCJ0bXBsX3N1Z2dlc3Rpb24iLCJwdXNoIiwic291cmNlIiwiYWxnb2xpYUF1dG9jb21wbGV0ZSIsImhpdHMiLCJpbml0SW5kZXgiLCJpbmRleF9uYW1lIiwiaGl0c1BlclBhZ2UiLCJtYXhfc3VnZ2VzdGlvbnMiLCJhdHRyaWJ1dGVzVG9TbmlwcGV0IiwiaGlnaGxpZ2h0UHJlVGFnIiwiaGlnaGxpZ2h0UG9zdFRhZyIsInRlbXBsYXRlcyIsImhlYWRlciIsImxhYmVsIiwiXyIsImVzY2FwZSIsInN1Z2dlc3Rpb24iLCJoaXQiLCJrZXkiLCJfaGlnaGxpZ2h0UmVzdWx0IiwidmFsdWUiLCJyZXBsYWNlIiwiX3NuaXBwZXRSZXN1bHQiLCJpbnB1dF9zZWxlY3RvciIsIiRzZWFyY2hJbnB1dCIsImRlYnVnIiwiaGludCIsIm9wZW5PbkZvY3VzIiwiYXBwZW5kVG8iLCJlbXB0eSIsInBvd2VyZWRfYnlfZW5hYmxlZCIsImZvb3RlciIsIm9uIiwiZSIsIndpbmRvdyIsImxvY2F0aW9uIiwiaHJlZiIsInBlcm1hbGluayIsInNjcm9sbCIsImdldFdyYXBwZXIiLCJzdHlsZSIsImRpc3BsYXkiLCJjbG9zZSIsIm9wZW4iLCJkb2N1bWVudCIsInByZXZlbnREZWZhdWx0IiwiaG9zdG5hbWUiXSwibWFwcGluZ3MiOiJBQUFBQSxNQUFNLENBQUMsWUFBWTtBQUNqQjtBQUNBLE1BQUcsT0FBT0MsYUFBUCxLQUF5QixXQUE1QixFQUF5QztBQUV2QztBQUNBLFFB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aEQsc0JBQVksQ0FBQ0EsWUFBYixDQUEwQmlELEtBQTFCO0FBQ0FqRCxzQkFBWSxDQUFDQSxZQUFiLENBQTBCa0QsSUFBMUI7QUFDRDtBQUNGLE9BTEQ7QUFNRCxLQS9CRDtBQWlDQTFELFVBQU0sQ0FBQzJELFFBQUQsQ0FBTixDQUFpQlosRUFBakIsQ0FBb0IsT0FBcEIsRUFBNkIsMEJBQTdCLEVBQXlELFVBQVVDLENBQVYsRUFBYTtBQUNwRUEsT0FBQyxDQUFDWSxjQUFGO0FBQ0FYLFlBQU0sQ0FBQ0MsUUFBUCxHQUFrQixvRkFBb0ZELE1BQU0sQ0FBQ0MsUUFBUCxDQUFnQlcsUUFBcEcsR0FBK0cseUJBQWpJO0FBQ0QsS0FIRDtBQUlEO0FBQ0YsQ0E1RkssQ0FBTiIsImZpbGUiOiIuL2Fzc2V0cy9zb3VyY2UvanMvYWxnb2xpYS1hdXRvY29tcGxldGUuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJqUXVlcnkoZnVuY3Rpb24gKCkge1xuICAvKiBDaGVjayBpZiBhbGdvbGlhIGlzIHJ1bm5pbmcgKi9cbiAgaWYodHlwZW9mIGFsZ29saWFzZWFyY2ggIT09IFwidW5kZWZpbmVkXCIpIHtcblxuICAgIC8qIGluaXQgQWxnb2xpYSBjbGllbnQgKi9cbiAgICB2YXIgY2xpZW50ID0gYWxnb2xpYXNlYXJjaChhbGdvbGlhLmFwcGxpY2F0aW9uX2lkLCBhbGdvbGlhLnNlYXJjaF9hcGlfa2V5KTtcblxuICAgIC8qIHNldHVwIGRlZmF1bHQgc291cmNlcyAqL1xuICAgIHZhciBzb3VyY2VzID0gW107XG4gICAgalF1ZXJ5LmVhY2goYWxnb2xpYS5hdXRvY29tcGxldGUuc291cmNlcywgZnVuY3Rpb24gKGksIGNvbmZpZykge1xuICAgICAgdmFyIHN1Z2dlc3Rpb25fdGVtcGxhdGUgPSB3cC50ZW1wbGF0ZShjb25maWcudG1wbF9zdWdnZXN0aW9uKTtcbiAgICAgIHNvdXJjZXMucHVzaCh7XG4gICAgICAgIHNvdXJjZTogYWxnb2xpYUF1dG9jb21wbGV0ZS5zb3VyY2VzLmhpdHMoY2xpZW50LmluaXRJbmRleChjb25maWcuaW5kZXhfbmFtZSksIHtcbiAgICAgICAgICBoaXRzUGVyUGFnZTogY29uZmlnLm1heF9zdWdnZXN0aW9ucyxcbiAgICAgICAgICBhdHRyaWJ1dGVzVG9TbmlwcGV0OiBbXG4gICAgICAgICAgICAnY29udGVudDoxMCdcbiAgICAgICAgICBdLFxuICAgICAgICAgIGhpZ2hsaWdodFByZVRhZzogJ19fYWlzLWhpZ2hsaWdodF9fJyxcbiAgICAgICAgICBoaWdobGlnaHRQb3N0VGFnOiAnX18vYWlzLWhpZ2hsaWdodF9fJ1xuICAgICAgICB9KSxcbiAgICAgICAgdGVtcGxhdGVzOiB7XG4gICAgICAgICAgaGVhZGVyOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICByZXR1cm4gd3AudGVtcGxhdGUoJ2F1dG9jb21wbGV0ZS1oZWFkZXInKSh7XG4gICAgICAgICAgICAgIGxhYmVsOiBfLmVzY2FwZShjb25maWcubGFiZWwpXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICB9LFxuICAgICAgICAgIHN1Z2dlc3Rpb246IGZ1bmN0aW9uIChoaXQpIHtcbiAgICAgICAgICAgIGZvciAodmFyIGtleSBpbiBoaXQuX2hpZ2hsaWdodFJlc3VsdCkge1xuICAgICAgICAgICAgICAvKiBXZSBkbyBub3QgZGVhbCB3aXRoIGFycmF5cy4gKi9cbiAgICAgICAgICAgICAgaWYgKHR5cGVvZiBoaXQuX2hpZ2hsaWdodFJlc3VsdFtrZXldLnZhbHVlICE9PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIGhpdC5faGlnaGxpZ2h0UmVzdWx0W2tleV0udmFsdWUgPSBfLmVzY2FwZShoaXQuX2hpZ2hsaWdodFJlc3VsdFtrZXldLnZhbHVlKTtcbiAgICAgICAgICAgICAgaGl0Ll9oaWdobGlnaHRSZXN1bHRba2V5XS52YWx1ZSA9IGhpdC5faGlnaGxpZ2h0UmVzdWx0W2tleV0udmFsdWUucmVwbGFjZSgvX19haXMtaGlnaGxpZ2h0X18vZywgJzxlbT4nKS5yZXBsYWNlKC9fX1xcL2Fpcy1oaWdobGlnaHRfXy9nLCAnPC9lbT4nKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgZm9yICh2YXIga2V5IGluIGhpdC5fc25pcHBldFJlc3VsdCkge1xuICAgICAgICAgICAgICAvKiBXZSBkbyBub3QgZGVhbCB3aXRoIGFycmF5cy4gKi9cbiAgICAgICAgICAgICAgaWYgKHR5cGVvZiBoaXQuX3NuaXBwZXRSZXN1bHRba2V5XS52YWx1ZSAhPT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgIGhpdC5fc25pcHBldFJlc3VsdFtrZXldLnZhbHVlID0gXy5lc2NhcGUoaGl0Ll9zbmlwcGV0UmVzdWx0W2tleV0udmFsdWUpO1xuICAgICAgICAgICAgICBoaXQuX3NuaXBwZXRSZXN1bHRba2V5XS52YWx1ZSA9IGhpdC5fc25pcHBldFJlc3VsdFtrZXldLnZhbHVlLnJlcGxhY2UoL19fYWlzLWhpZ2hsaWdodF9fL2csICc8ZW0+JykucmVwbGFjZSgvX19cXC9haXMtaGlnaGxpZ2h0X18vZywgJzwvZW0+Jyk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHJldHVybiBzdWdnZXN0aW9uX3RlbXBsYXRlKGhpdCk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9KTtcblxuICAgIH0pO1xuXG4gICAgLyogU2V0dXAgZHJvcGRvd24gbWVudXMgKi9cbiAgICBqUXVlcnkoXCIuc2VhcmNoLXRvcCBcIiArIGFsZ29saWEuYXV0b2NvbXBsZXRlLmlucHV0X3NlbGVjdG9yICsgXCIsICNzaXRlLWhlYWRlciBcIiArIGFsZ29saWEuYXV0b2NvbXBsZXRlLmlucHV0X3NlbGVjdG9yICsgXCIsIC5oZXJvIFwiICsgYWxnb2xpYS5hdXRvY29tcGxldGUuaW5wdXRfc2VsZWN0b3IpLmVhY2goZnVuY3Rpb24gKGkpIHtcbiAgICAgIHZhciAkc2VhcmNoSW5wdXQgPSBqUXVlcnkodGhpcyk7XG5cbiAgICAgIHZhciBjb25maWcgPSB7XG4gICAgICAgIGRlYnVnOiBhbGdvbGlhLmRlYnVnLFxuICAgICAgICBoaW50OiBmYWxzZSxcbiAgICAgICAgb3Blbk9uRm9jdXM6IHRydWUsXG4gICAgICAgIGFwcGVuZFRvOiAnYm9keScsXG4gICAgICAgIHRlbXBsYXRlczoge1xuICAgICAgICAgIGVtcHR5OiB3cC50ZW1wbGF0ZSgnYXV0b2NvbXBsZXRlLWVtcHR5JylcbiAgICAgICAgfVxuICAgICAgfTtcblxuICAgICAgaWYgKGFsZ29saWEucG93ZXJlZF9ieV9lbmFibGVkKSB7XG4gICAgICAgIGNvbmZpZy50ZW1wbGF0ZXMuZm9vdGVyID0gd3AudGVtcGxhdGUoJ2F1dG9jb21wbGV0ZS1mb290ZXInKTtcbiAgICAgIH1cblxuICAgICAgLyogSW5zdGFudGlhdGUgYXV0b2NvbXBsZXRlLmpzICovXG4gICAgICB2YXIgYXV0b2NvbXBsZXRlID0gYWxnb2xpYUF1dG9jb21wbGV0ZSgkc2VhcmNoSW5wdXRbMF0sIGNvbmZpZywgc291cmNlcylcbiAgICAgIC5vbignYXV0b2NvbXBsZXRlOnNlbGVjdGVkJywgZnVuY3Rpb24gKGUsIHN1Z2dlc3Rpb24pIHtcbiAgICAgICAgLyogUmVkaXJlY3QgdGhlIHVzZXIgd2hlbiB3ZSBkZXRlY3QgYSBzdWdnZXN0aW9uIHNlbGVjdGlvbi4gKi9cbiAgICAgICAgd2luZG93LmxvY2F0aW9uLmhyZWYgPSBzdWdnZXN0aW9uLnBlcm1hbGluaztcbiAgICAgIH0pO1xuXG4gICAgICAvKiBGb3JjZSB0aGUgZHJvcGRvd24gdG8gYmUgcmUtZHJhd24gb24gc2Nyb2xsIHRvIGhhbmRsZSBmaXhlZCBjb250YWluZXJzLiAqL1xuICAgICAgalF1ZXJ5KHdpbmRvdykuc2Nyb2xsKGZ1bmN0aW9uKCkge1xuICAgICAgICBpZihhdXRvY29tcGxldGUuYXV0b2NvbXBsZXRlLmdldFdyYXBwZXIoKS5zdHlsZS5kaXNwbGF5ID09PSBcImJsb2NrXCIpIHtcbiAgICAgICAgICBhdXRvY29tcGxldGUuYXV0b2NvbXBsZXRlLmNsb3NlKCk7XG4gICAgICAgICAgYXV0b2NvbXBsZXRlLmF1dG9jb21wbGV0ZS5vcGVuKCk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH0pO1xuXG4gICAgalF1ZXJ5KGRvY3VtZW50KS5vbihcImNsaWNrXCIsIFwiLmFsZ29saWEtcG93ZXJlZC1ieS1saW5rXCIsIGZ1bmN0aW9uIChlKSB7XG4gICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICB3aW5kb3cubG9jYXRpb24gPSBcImh0dHBzOi8vd3d3LmFsZ29saWEuY29tLz91dG1fc291cmNlPVdvcmRQcmVzcyZ1dG1fbWVkaXVtPWV4dGVuc2lvbiZ1dG1fY29udGVudD1cIiArIHdpbmRvdy5sb2NhdGlvbi5ob3N0bmFtZSArIFwiJnV0bV9jYW1wYWlnbj1wb3dlcmVkYnlcIjtcbiAgICB9KTtcbiAgfVxufSk7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./assets/source/js/algolia-autocomplete.js\n");

/***/ }),

/***/ "./assets/source/js/algolia-instantsearch.js":
/*!***************************************************!*\
  !*** ./assets/source/js/algolia-instantsearch.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("document.addEventListener('DOMContentLoaded', function () {\n  if (document.getElementById('algolia-search-box')) {\n    /* Instantiate instantsearch.js */\n    var search = instantsearch({\n      appId: algolia.application_id,\n      apiKey: algolia.search_api_key,\n      indexName: algolia.indices.searchable_posts.name,\n      urlSync: {\n        mapping: {\n          'q': 's'\n        },\n        trackedParameters: ['query']\n      },\n      searchParameters: {\n        facetingAfterDistinct: true,\n        highlightPreTag: '__ais-highlight__',\n        highlightPostTag: '__/ais-highlight__'\n      }\n    });\n    /* Search box widget */\n\n    search.addWidget(instantsearch.widgets.searchBox({\n      container: '#algolia-search-box',\n      placeholder: 'Search for...',\n      wrapInput: false,\n      poweredBy: false,\n      cssClasses: {\n        input: ['form-control', 'form-control-lg']\n      }\n    }));\n    /* Stats widget */\n\n    search.addWidget(instantsearch.widgets.stats({\n      container: '#algolia-stats',\n      autoHideContainer: false,\n      templates: {\n        body: wp.template('instantsearch-status')\n      }\n    }));\n    /* Hits widget */\n\n    search.addWidget(instantsearch.widgets.hits({\n      container: '#algolia-hits',\n      hitsPerPage: 10,\n      cssClasses: {\n        root: ['search-result-list'],\n        item: ['search-result-item']\n      },\n      templates: {\n        empty: wp.template('instantsearch-empty'),\n        item: wp.template('instantsearch-hit')\n      },\n      transformData: {\n        item: function item(hit) {\n          /* Create content snippet */\n          hit.contentSnippet = hit.content.length > 300 ? hit.content.substring(0, 300 - 3) + '...' : hit.content;\n          /* Create hightlight results */\n\n          for (var key in hit._highlightResult) {\n            if (typeof hit._highlightResult[key].value !== 'string') {\n              continue;\n            }\n\n            hit._highlightResult[key].value = _.escape(hit._highlightResult[key].value);\n            hit._highlightResult[key].value = hit._highlightResult[key].value.replace(/__ais-highlight__/g, '<em>').replace(/__\\/ais-highlight__/g, '</em>');\n          }\n\n          return hit;\n        }\n      }\n    }));\n    /* Pagination widget */\n\n    search.addWidget(instantsearch.widgets.pagination({\n      container: '#algolia-pagination',\n      cssClasses: {\n        root: ['pagination'],\n        item: ['page'],\n        disabled: ['hidden']\n      }\n    }));\n    /* Start */\n\n    search.start();\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hc3NldHMvc291cmNlL2pzL2FsZ29saWEtaW5zdGFudHNlYXJjaC5qcz9jMzhmIl0sIm5hbWVzIjpbImRvY3VtZW50IiwiYWRkRXZlbnRMaXN0ZW5lciIsImdldEVsZW1lbnRCeUlkIiwic2VhcmNoIiwiaW5zdGFudHNlYXJjaCIsImFwcElkIiwiYWxnb2xpYSIsImFwcGxpY2F0aW9uX2lkIiwiYXBpS2V5Iiwic2VhcmNoX2FwaV9rZXkiLCJpbmRleE5hbWUiLCJpbmRpY2VzIiwic2VhcmNoYWJsZV9wb3N0cyIsIm5hbWUiLCJ1cmxTeW5jIiwibWFwcGluZyIsInRyYWNrZWRQYXJhbWV0ZXJzIiwic2VhcmNoUGFyYW1ldGVycyIsImZhY2V0aW5nQWZ0ZXJEaXN0aW5jdCIsImhpZ2hsaWdodFByZVRhZyIsImhpZ2hsaWdodFBvc3RUYWciLCJhZGRXaWRnZXQiLCJ3aWRnZXRzIiwic2VhcmNoQm94IiwiY29udGFpbmVyIiwicGxhY2Vob2xkZXIiLCJ3cmFwSW5wdXQiLCJwb3dlcmVkQnkiLCJjc3NDbGFzc2VzIiwiaW5wdXQiLCJzdGF0cyIsImF1dG9IaWRlQ29udGFpbmVyIiwidGVtcGxhdGVzIiwiYm9keSIsIndwIiwidGVtcGxhdGUiLCJoaXRzIiwiaGl0c1BlclBhZ2UiLCJyb290IiwiaXRlbSIsImVtcHR5IiwidHJhbnNmb3JtRGF0YSIsImhpdCIsImNvbnRlbnRTbmlwcGV0IiwiY29udGVudCIsImxlbmd0aCIsInN1YnN0cmluZyIsImtleSIsIl9oaWdobGlnaHRSZXN1bHQiLCJ2YWx1ZSIsIl8iLCJlc2NhcGUiLCJyZXBsYWNlIiwicGFnaW5hdGlvbiIsImRpc2FibGVkIiwic3RhcnQiXSwibWFwcGluZ3MiOiJBQUFBQSxRQUFRLENBQUNDLGdCQUFULENBQTBCLGtCQUExQixFQUE4QyxZQUFXO0FBQ3JELE1BQUdELFFBQVEsQ0FBQ0UsY0FBVCxDQUF3QixvQkFBeEIsQ0FBSCxFQUFrRDtBQUU5QztBQUNBLFFBQUlDLE1BQU0sR0FBR0MsYUFBYSxDQUFDO0FBQ3ZCQyxXQUFLLEVBQUVDLE9BQU8sQ0FBQ0MsY0FEUTtBQUV2QkMsWUFBTSxFQUFFRixPQUFPLENBQUNHLGNBRk87QUFHdkJDLGVBQVMsRUFBRUosT0FBTyxDQUFDSyxPQUFSLENBQWdCQyxnQkFBaEIsQ0FBaUNDLElBSHJCO0FBSXZCQyxhQUFPLEVBQUU7QUFDTEMsZUFBTyxFQUFFO0FBQUMsZUFBSztBQUFOLFNBREo7QUFFTEMseUJBQWlCLEVBQUUsQ0FBQyxPQUFEO0FBRmQsT0FKYztBQVF2QkMsc0JBQWdCLEVBQUU7QUFDZEMsNkJBQXFCLEVBQUUsSUFEVDtBQUVkQyx1QkFBZSxFQUFFLG1CQUZIO0FBR2RDLHdCQUFnQixFQUFFO0FBSEo7QUFSSyxLQUFELENBQTFCO0FBZUE7O0FBQ0FqQixVQUFNLENBQUNrQixTQUFQLENBQ0lqQixhQUFhLENBQUNrQixPQUFkLENBQXNCQyxTQUF0QixDQUFnQztBQUM1QkMsZUFBUyxFQUFFLHFCQURpQjtBQUU1QkMsaUJBQVcsRUFBRSxlQUZlO0FBRzVCQyxlQUFTLEVBQUUsS0FIaUI7QUFJNUJDLGVBQVMsRUFBRSxLQUppQjtBQUs1QkMsZ0JBQVUsRUFBRTtBQUNSQyxhQUFLLEVBQUUsQ0FBQyxjQUFELEVBQWlCLGlCQUFqQjtBQURDO0FBTGdCLEtBQWhDLENBREo7QUFZQTs7QUFDQTFCLFVBQU0sQ0FBQ2tCLFNBQVAsQ0FDSWpCLGFBQWEsQ0FBQ2tCLE9BQWQsQ0FBc0JRLEtBQXRCLENBQTRCO0FBQ3hCTixlQUFTLEVBQUUsZ0JBRGE7QUFFeEJPLHVCQUFpQixFQUFFLEtBRks7QUFHeEJDLGVBQVMsRUFBRTtBQUNQQyxZQUFJLEVBQUVDLEVBQUUsQ0FBQ0MsUUFBSCxDQUFZLHNCQUFaO0FBREM7QUFIYSxLQUE1QixDQURKO0FBVUE7O0FBQ0FoQyxVQUFNLENBQUNrQixTQUFQLENBQ0lqQixhQUFhLENBQUNrQixPQUFkLENBQXNCYyxJQUF0QixDQUEyQjtBQUN2QlosZUFBUyxFQUFFLGVBRFk7QUFFdkJhLGlCQUFXLEVBQUUsRUFGVTtBQUd2QlQsZ0JBQVUsRUFBRTtBQUNSVSxZQUFJLEVBQUUsQ0FBQyxvQkFBRCxDQURFO0FBRVJDLFlBQUksRUFBRSxDQUFDLG9CQUFEO0FBRkUsT0FIVztBQU92QlAsZUFBUyxFQUFFO0FBQ1BRLGFBQUssRUFBRU4sRUFBRSxDQUFDQyxRQUFILENBQVkscUJBQVosQ0FEQTtBQUVQSSxZQUFJLEVBQUVMLEVBQUUsQ0FBQ0MsUUFBSCxDQUFZLG1CQUFaO0FBRkMsT0FQWTtBQVd2Qk0sbUJBQWEsRUFBRTtBQUNYRixZQUFJLEVBQUUsY0FBVUcsR0FBVixFQUFlO0FBRWpCO0FBQ0FBLGFBQUcsQ0FBQ0MsY0FBSixHQUFxQkQsR0FBRyxDQUFDRSxPQUFKLENBQVlDLE1BQVosR0FBcUIsR0FBckIsR0FBMkJILEdBQUcsQ0FBQ0UsT0FBSixDQUFZRSxTQUFaLENBQXNCLENBQXRCLEVBQXlCLE1BQU0sQ0FBL0IsSUFBb0MsS0FBL0QsR0FBdUVKLEdBQUcsQ0FBQ0UsT0FBaEc7QUFFQTs7QUFDQSxlQUFJLElBQUlHLEdBQVIsSUFBZUwsR0FBRyxDQUFDTSxnQkFBbkIsRUFBcUM7QUFDbkMsZ0JBQUcsT0FBT04sR0FBRyxDQUFDTSxnQkFBSixDQUFxQkQsR0FBckIsRUFBMEJFLEtBQWpDLEtBQTJDLFFBQTlDLEVBQXdEO0FBQ3REO0FBQ0Q7O0FBQ0RQLGVBQUcsQ0FBQ00sZ0JBQUosQ0FBcUJELEdBQXJCLEVBQTBCRSxLQUExQixHQUFrQ0MsQ0FBQyxDQUFDQyxNQUFGLENBQVNULEdBQUcsQ0FBQ00sZ0JBQUosQ0FBcUJELEdBQXJCLEVBQTBCRSxLQUFuQyxDQUFsQztBQUNBUCxlQUFHLENBQUNNLGdCQUFKLENBQXFCRCxHQUFyQixFQUEwQkUsS0FBMUIsR0FBa0NQLEdBQUcsQ0FBQ00sZ0JBQUosQ0FBcUJELEdBQXJCLEVBQTBCRSxLQUExQixDQUFnQ0csT0FBaEMsQ0FBd0Msb0JBQXhDLEVBQThELE1BQTlELEVBQXNFQSxPQUF0RSxDQUE4RSxzQkFBOUUsRUFBc0csT0FBdEcsQ0FBbEM7QUFDRDs7QUFFRCxpQkFBT1YsR0FBUDtBQUNIO0FBaEJVO0FBWFEsS0FBM0IsQ0FESjtBQWlDQTs7QUFDQXZDLFVBQU0sQ0FBQ2tCLFNBQVAsQ0FDSWpCLGFBQWEsQ0FBQ2tCLE9BQWQsQ0FBc0IrQixVQUF0QixDQUFpQztBQUM3QjdCLGVBQVMsRUFBRSxxQkFEa0I7QUFFN0JJLGdCQUFVLEVBQUU7QUFDUlUsWUFBSSxFQUFFLENBQUMsWUFBRCxDQURFO0FBRVJDLFlBQUksRUFBRSxDQUFDLE1BQUQsQ0FGRTtBQUdSZSxnQkFBUSxFQUFFLENBQUMsUUFBRDtBQUhGO0FBRmlCLEtBQWpDLENBREo7QUFXQTs7QUFDQW5ELFVBQU0sQ0FBQ29ELEtBQVA7QUFDSDtBQUNKLENBNUZEIiwiZmlsZSI6Ii4vYXNzZXRzL3NvdXJjZS9qcy9hbGdvbGlhLWluc3RhbnRzZWFyY2guanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdET01Db250ZW50TG9hZGVkJywgZnVuY3Rpb24oKSB7XG4gICAgaWYoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2FsZ29saWEtc2VhcmNoLWJveCcpKSB7XG5cbiAgICAgICAgLyogSW5zdGFudGlhdGUgaW5zdGFudHNlYXJjaC5qcyAqL1xuICAgICAgICB2YXIgc2VhcmNoID0gaW5zdGFudHNlYXJjaCh7XG4gICAgICAgICAgICBhcHBJZDogYWxnb2xpYS5hcHBsaWNhdGlvbl9pZCxcbiAgICAgICAgICAgIGFwaUtleTogYWxnb2xpYS5zZWFyY2hfYXBpX2tleSxcbiAgICAgICAgICAgIGluZGV4TmFtZTogYWxnb2xpYS5pbmRpY2VzLnNlYXJjaGFibGVfcG9zdHMubmFtZSxcbiAgICAgICAgICAgIHVybFN5bmM6IHtcbiAgICAgICAgICAgICAgICBtYXBwaW5nOiB7J3EnOiAncyd9LFxuICAgICAgICAgICAgICAgIHRyYWNrZWRQYXJhbWV0ZXJzOiBbJ3F1ZXJ5J11cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBzZWFyY2hQYXJhbWV0ZXJzOiB7XG4gICAgICAgICAgICAgICAgZmFjZXRpbmdBZnRlckRpc3RpbmN0OiB0cnVlLFxuICAgICAgICAgICAgICAgIGhpZ2hsaWdodFByZVRhZzogJ19fYWlzLWhpZ2hsaWdodF9fJyxcbiAgICAgICAgICAgICAgICBoaWdobGlnaHRQb3N0VGFnOiAnX18vYWlzLWhpZ2hsaWdodF9fJ1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcblxuICAgICAgICAvKiBTZWFyY2ggYm94IHdpZGdldCAqL1xuICAgICAgICBzZWFyY2guYWRkV2lkZ2V0KFxuICAgICAgICAgICAgaW5zdGFudHNlYXJjaC53aWRnZXRzLnNlYXJjaEJveCh7XG4gICAgICAgICAgICAgICAgY29udGFpbmVyOiAnI2FsZ29saWEtc2VhcmNoLWJveCcsXG4gICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI6ICdTZWFyY2ggZm9yLi4uJyxcbiAgICAgICAgICAgICAgICB3cmFwSW5wdXQ6IGZhbHNlLFxuICAgICAgICAgICAgICAgIHBvd2VyZWRCeTogZmFsc2UsXG4gICAgICAgICAgICAgICAgY3NzQ2xhc3Nlczoge1xuICAgICAgICAgICAgICAgICAgICBpbnB1dDogWydmb3JtLWNvbnRyb2wnLCAnZm9ybS1jb250cm9sLWxnJ11cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KVxuICAgICAgICApO1xuXG4gICAgICAgIC8qIFN0YXRzIHdpZGdldCAqL1xuICAgICAgICBzZWFyY2guYWRkV2lkZ2V0KFxuICAgICAgICAgICAgaW5zdGFudHNlYXJjaC53aWRnZXRzLnN0YXRzKHtcbiAgICAgICAgICAgICAgICBjb250YWluZXI6ICcjYWxnb2xpYS1zdGF0cycsXG4gICAgICAgICAgICAgICAgYXV0b0hpZGVDb250YWluZXI6IGZhbHNlLFxuICAgICAgICAgICAgICAgIHRlbXBsYXRlczoge1xuICAgICAgICAgICAgICAgICAgICBib2R5OiB3cC50ZW1wbGF0ZSgnaW5zdGFudHNlYXJjaC1zdGF0dXMnKVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pXG4gICAgICAgICk7XG5cbiAgICAgICAgLyogSGl0cyB3aWRnZXQgKi9cbiAgICAgICAgc2VhcmNoLmFkZFdpZGdldChcbiAgICAgICAgICAgIGluc3RhbnRzZWFyY2gud2lkZ2V0cy5oaXRzKHtcbiAgICAgICAgICAgICAgICBjb250YWluZXI6ICcjYWxnb2xpYS1oaXRzJyxcbiAgICAgICAgICAgICAgICBoaXRzUGVyUGFnZTogMTAsXG4gICAgICAgICAgICAgICAgY3NzQ2xhc3Nlczoge1xuICAgICAgICAgICAgICAgICAgICByb290OiBbJ3NlYXJjaC1yZXN1bHQtbGlzdCddLFxuICAgICAgICAgICAgICAgICAgICBpdGVtOiBbJ3NlYXJjaC1yZXN1bHQtaXRlbSddXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB0ZW1wbGF0ZXM6IHtcbiAgICAgICAgICAgICAgICAgICAgZW1wdHk6IHdwLnRlbXBsYXRlKCdpbnN0YW50c2VhcmNoLWVtcHR5JyksXG4gICAgICAgICAgICAgICAgICAgIGl0ZW06IHdwLnRlbXBsYXRlKCdpbnN0YW50c2VhcmNoLWhpdCcpXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB0cmFuc2Zvcm1EYXRhOiB7XG4gICAgICAgICAgICAgICAgICAgIGl0ZW06IGZ1bmN0aW9uIChoaXQpIHtcblxuICAgICAgICAgICAgICAgICAgICAgICAgLyogQ3JlYXRlIGNvbnRlbnQgc25pcHBldCAqL1xuICAgICAgICAgICAgICAgICAgICAgICAgaGl0LmNvbnRlbnRTbmlwcGV0ID0gaGl0LmNvbnRlbnQubGVuZ3RoID4gMzAwID8gaGl0LmNvbnRlbnQuc3Vic3RyaW5nKDAsIDMwMCAtIDMpICsgJy4uLicgOiBoaXQuY29udGVudDtcblxuICAgICAgICAgICAgICAgICAgICAgICAgLyogQ3JlYXRlIGhpZ2h0bGlnaHQgcmVzdWx0cyAqL1xuICAgICAgICAgICAgICAgICAgICAgICAgZm9yKHZhciBrZXkgaW4gaGl0Ll9oaWdobGlnaHRSZXN1bHQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgaWYodHlwZW9mIGhpdC5faGlnaGxpZ2h0UmVzdWx0W2tleV0udmFsdWUgIT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgaGl0Ll9oaWdobGlnaHRSZXN1bHRba2V5XS52YWx1ZSA9IF8uZXNjYXBlKGhpdC5faGlnaGxpZ2h0UmVzdWx0W2tleV0udmFsdWUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICBoaXQuX2hpZ2hsaWdodFJlc3VsdFtrZXldLnZhbHVlID0gaGl0Ll9oaWdobGlnaHRSZXN1bHRba2V5XS52YWx1ZS5yZXBsYWNlKC9fX2Fpcy1oaWdobGlnaHRfXy9nLCAnPGVtPicpLnJlcGxhY2UoL19fXFwvYWlzLWhpZ2hsaWdodF9fL2csICc8L2VtPicpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gaGl0O1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSlcbiAgICAgICAgKTtcblxuICAgICAgICAvKiBQYWdpbmF0aW9uIHdpZGdldCAqL1xuICAgICAgICBzZWFyY2guYWRkV2lkZ2V0KFxuICAgICAgICAgICAgaW5zdGFudHNlYXJjaC53aWRnZXRzLnBhZ2luYXRpb24oe1xuICAgICAgICAgICAgICAgIGNvbnRhaW5lcjogJyNhbGdvbGlhLXBhZ2luYXRpb24nLFxuICAgICAgICAgICAgICAgIGNzc0NsYXNzZXM6IHtcbiAgICAgICAgICAgICAgICAgICAgcm9vdDogWydwYWdpbmF0aW9uJ10sXG4gICAgICAgICAgICAgICAgICAgIGl0ZW06IFsncGFnZSddLFxuICAgICAgICAgICAgICAgICAgICBkaXNhYmxlZDogWydoaWRkZW4nXVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pXG4gICAgICAgICk7XG5cbiAgICAgICAgLyogU3RhcnQgKi9cbiAgICAgICAgc2VhcmNoLnN0YXJ0KCk7XG4gICAgfVxufSk7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./assets/source/js/algolia-instantsearch.js\n");

/***/ }),

/***/ "./assets/source/js/app.js":
/*!*********************************!*\
  !*** ./assets/source/js/app.js ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var Muncipio = {};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hc3NldHMvc291cmNlL2pzL2FwcC5qcz8zNDg1Il0sIm5hbWVzIjpbIk11bmNpcGlvIl0sIm1hcHBpbmdzIjoiQUFBQSxJQUFJQSxRQUFRLEdBQUcsRUFBZiIsImZpbGUiOiIuL2Fzc2V0cy9zb3VyY2UvanMvYXBwLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIE11bmNpcGlvID0ge307XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./assets/source/js/app.js\n");

/***/ }),

/***/ "./assets/source/js/comments.js":
/*!**************************************!*\
  !*** ./assets/source/js/comments.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var Muncipio = Muncipio || {};\nMuncipio.Post = Muncipio.Post || {};\n\nMuncipio.Post.Comments = function ($) {\n  function Comments() {\n    $(function () {\n      this.handleEvents();\n    }.bind(this));\n  }\n  /**\n   * Handle events\n   * @return {void}\n   */\n\n\n  Comments.prototype.handleEvents = function () {\n    $(document).on('click', '#edit-comment', function (e) {\n      e.preventDefault();\n      this.displayEditForm(e);\n    }.bind(this));\n    $(document).on('submit', '#commentupdate', function (e) {\n      e.preventDefault();\n      this.udpateComment(e);\n    }.bind(this));\n    $(document).on('click', '#delete-comment', function (e) {\n      e.preventDefault();\n\n      if (window.confirm(MunicipioLang.messages.deleteComment)) {\n        this.deleteComment(e);\n      }\n    }.bind(this));\n    $(document).on('click', '.cancel-update-comment', function (e) {\n      e.preventDefault();\n      this.cleanUp();\n    }.bind(this));\n    $(document).on('click', '.comment-reply-link', function (e) {\n      this.cleanUp();\n    }.bind(this));\n  };\n\n  Comments.prototype.udpateComment = function (event) {\n    var $target = $(event.target).closest('.comment-body').find('.comment-content'),\n        data = new FormData(event.target),\n        oldComment = $target.html();\n    data.append('action', 'update_comment');\n    $.ajax({\n      url: ajaxurl,\n      type: 'post',\n      context: this,\n      processData: false,\n      contentType: false,\n      data: data,\n      dataType: 'json',\n      beforeSend: function beforeSend() {\n        // Do expected behavior\n        $target.html(data.get('comment'));\n        this.cleanUp();\n      },\n      success: function success(response) {\n        if (!response.success) {\n          // Undo front end update\n          $target.html(oldComment);\n          this.showError($target);\n        }\n      },\n      error: function error(jqXHR, textStatus) {\n        $target.html(oldComment);\n        this.showError($target);\n      }\n    });\n  };\n\n  Comments.prototype.displayEditForm = function (event) {\n    var commentId = $(event.currentTarget).data('comment-id'),\n        postId = $(event.currentTarget).data('post-id'),\n        $target = $('.comment-body', '#answer-' + commentId + ', #comment-' + commentId).first();\n    this.cleanUp();\n    $('.comment-content, .comment-footer', $target).hide();\n    $target.append('<div class=\"loading gutter gutter-top gutter-margin\"><div></div><div></div><div></div><div></div></div>');\n    $.when(this.getCommentForm(commentId, postId)).then(function (response) {\n      if (response.success) {\n        $target.append(response.data);\n        $('.loading', $target).remove(); // Re init tinyMce if its used\n\n        if ($('.tinymce-editor').length) {\n          tinymce.EditorManager.execCommand('mceRemoveEditor', true, 'comment-edit');\n          tinymce.EditorManager.execCommand('mceAddEditor', true, 'comment-edit');\n        }\n      } else {\n        this.cleanUp();\n        this.showError($target);\n      }\n    });\n  };\n\n  Comments.prototype.getCommentForm = function (commentId, postId) {\n    return $.ajax({\n      url: ajaxurl,\n      type: 'post',\n      dataType: 'json',\n      context: this,\n      data: {\n        action: 'get_comment_form',\n        commentId: commentId,\n        postId: postId\n      }\n    });\n  };\n\n  Comments.prototype.deleteComment = function (event) {\n    var $target = $(event.currentTarget),\n        commentId = $target.data('comment-id'),\n        nonce = $target.data('comment-nonce');\n    $.ajax({\n      url: ajaxurl,\n      type: 'post',\n      context: this,\n      dataType: 'json',\n      data: {\n        action: 'remove_comment',\n        id: commentId,\n        nonce: nonce\n      },\n      beforeSend: function beforeSend(response) {\n        // Do expected behavior\n        $target.closest('li.answer, li.comment').fadeOut('fast');\n      },\n      success: function success(response) {\n        if (!response.success) {\n          // Undo front end deletion\n          this.showError($target);\n        }\n      },\n      error: function error(jqXHR, textStatus) {\n        this.showError($target);\n      }\n    });\n  };\n\n  Comments.prototype.cleanUp = function (event) {\n    $('.comment-update').remove();\n    $('.loading', '.comment-body').remove();\n    $('.dropdown-menu').hide();\n    $('.comment-content, .comment-footer').fadeIn('fast');\n  };\n\n  Comments.prototype.showError = function (target) {\n    target.closest('li.answer, li.comment').fadeIn('fast').find('.comment-body:first').append('<small class=\"text-danger\">' + MunicipioLang.messages.onError + '</small>').find('.text-danger').delay(4000).fadeOut('fast');\n  };\n\n  return new Comments();\n}(jQuery);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./assets/source/js/comments.js\n");

/***/ }),

/***/ "./assets/source/js/font.js":
/*!**********************************!*\
  !*** ./assets/source/js/font.js ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_RESULT__;(function () {\n  function aa(a, b, c) {\n    return a.call.apply(a.bind, arguments);\n  }\n\n  function ba(a, b, c) {\n    if (!a) throw Error();\n\n    if (2 < arguments.length) {\n      var d = Array.prototype.slice.call(arguments, 2);\n      return function () {\n        var c = Array.prototype.slice.call(arguments);\n        Array.prototype.unshift.apply(c, d);\n        return a.apply(b, c);\n      };\n    }\n\n    return function () {\n      return a.apply(b, arguments);\n    };\n  }\n\n  function p(a, b, c) {\n    p = Function.prototype.bind && -1 != Function.prototype.bind.toString().indexOf(\"native code\") ? aa : ba;\n    return p.apply(null, arguments);\n  }\n\n  var q = Date.now || function () {\n    return +new Date();\n  };\n\n  function ca(a, b) {\n    this.a = a;\n    this.m = b || a;\n    this.c = this.m.document;\n  }\n\n  var da = !!window.FontFace;\n\n  function t(a, b, c, d) {\n    b = a.c.createElement(b);\n    if (c) for (var e in c) {\n      c.hasOwnProperty(e) && (\"style\" == e ? b.style.cssText = c[e] : b.setAttribute(e, c[e]));\n    }\n    d && b.appendChild(a.c.createTextNode(d));\n    return b;\n  }\n\n  function u(a, b, c) {\n    a = a.c.getElementsByTagName(b)[0];\n    a || (a = document.documentElement);\n    a.insertBefore(c, a.lastChild);\n  }\n\n  function v(a) {\n    a.parentNode && a.parentNode.removeChild(a);\n  }\n\n  function w(a, b, c) {\n    b = b || [];\n    c = c || [];\n\n    for (var d = a.className.split(/\\s+/), e = 0; e < b.length; e += 1) {\n      for (var f = !1, g = 0; g < d.length; g += 1) {\n        if (b[e] === d[g]) {\n          f = !0;\n          break;\n        }\n      }\n\n      f || d.push(b[e]);\n    }\n\n    b = [];\n\n    for (e = 0; e < d.length; e += 1) {\n      f = !1;\n\n      for (g = 0; g < c.length; g += 1) {\n        if (d[e] === c[g]) {\n          f = !0;\n          break;\n        }\n      }\n\n      f || b.push(d[e]);\n    }\n\n    a.className = b.join(\" \").replace(/\\s+/g, \" \").replace(/^\\s+|\\s+$/, \"\");\n  }\n\n  function y(a, b) {\n    for (var c = a.className.split(/\\s+/), d = 0, e = c.length; d < e; d++) {\n      if (c[d] == b) return !0;\n    }\n\n    return !1;\n  }\n\n  function z(a) {\n    if (\"string\" === typeof a.f) return a.f;\n    var b = a.m.location.protocol;\n    \"about:\" == b && (b = a.a.location.protocol);\n    return \"https:\" == b ? \"https:\" : \"http:\";\n  }\n\n  function ea(a) {\n    return a.m.location.hostname || a.a.location.hostname;\n  }\n\n  function A(a, b, c) {\n    function d() {\n      k && e && f && (k(g), k = null);\n    }\n\n    b = t(a, \"link\", {\n      rel: \"stylesheet\",\n      href: b,\n      media: \"all\"\n    });\n    var e = !1,\n        f = !0,\n        g = null,\n        k = c || null;\n    da ? (b.onload = function () {\n      e = !0;\n      d();\n    }, b.onerror = function () {\n      e = !0;\n      g = Error(\"Stylesheet failed to load\");\n      d();\n    }) : setTimeout(function () {\n      e = !0;\n      d();\n    }, 0);\n    u(a, \"head\", b);\n  }\n\n  function B(a, b, c, d) {\n    var e = a.c.getElementsByTagName(\"head\")[0];\n\n    if (e) {\n      var f = t(a, \"script\", {\n        src: b\n      }),\n          g = !1;\n\n      f.onload = f.onreadystatechange = function () {\n        g || this.readyState && \"loaded\" != this.readyState && \"complete\" != this.readyState || (g = !0, c && c(null), f.onload = f.onreadystatechange = null, \"HEAD\" == f.parentNode.tagName && e.removeChild(f));\n      };\n\n      e.appendChild(f);\n      setTimeout(function () {\n        g || (g = !0, c && c(Error(\"Script load timeout\")));\n      }, d || 5E3);\n      return f;\n    }\n\n    return null;\n  }\n\n  ;\n\n  function C() {\n    this.a = 0;\n    this.c = null;\n  }\n\n  function D(a) {\n    a.a++;\n    return function () {\n      a.a--;\n      E(a);\n    };\n  }\n\n  function F(a, b) {\n    a.c = b;\n    E(a);\n  }\n\n  function E(a) {\n    0 == a.a && a.c && (a.c(), a.c = null);\n  }\n\n  ;\n\n  function G(a) {\n    this.a = a || \"-\";\n  }\n\n  G.prototype.c = function (a) {\n    for (var b = [], c = 0; c < arguments.length; c++) {\n      b.push(arguments[c].replace(/[\\W_]+/g, \"\").toLowerCase());\n    }\n\n    return b.join(this.a);\n  };\n\n  function H(a, b) {\n    this.c = a;\n    this.f = 4;\n    this.a = \"n\";\n    var c = (b || \"n4\").match(/^([nio])([1-9])$/i);\n    c && (this.a = c[1], this.f = parseInt(c[2], 10));\n  }\n\n  function fa(a) {\n    return I(a) + \" \" + (a.f + \"00\") + \" 300px \" + J(a.c);\n  }\n\n  function J(a) {\n    var b = [];\n    a = a.split(/,\\s*/);\n\n    for (var c = 0; c < a.length; c++) {\n      var d = a[c].replace(/['\"]/g, \"\");\n      -1 != d.indexOf(\" \") || /^\\d/.test(d) ? b.push(\"'\" + d + \"'\") : b.push(d);\n    }\n\n    return b.join(\",\");\n  }\n\n  function K(a) {\n    return a.a + a.f;\n  }\n\n  function I(a) {\n    var b = \"normal\";\n    \"o\" === a.a ? b = \"oblique\" : \"i\" === a.a && (b = \"italic\");\n    return b;\n  }\n\n  function ga(a) {\n    var b = 4,\n        c = \"n\",\n        d = null;\n    a && ((d = a.match(/(normal|oblique|italic)/i)) && d[1] && (c = d[1].substr(0, 1).toLowerCase()), (d = a.match(/([1-9]00|normal|bold)/i)) && d[1] && (/bold/i.test(d[1]) ? b = 7 : /[1-9]00/.test(d[1]) && (b = parseInt(d[1].substr(0, 1), 10))));\n    return c + b;\n  }\n\n  ;\n\n  function ha(a, b) {\n    this.c = a;\n    this.f = a.m.document.documentElement;\n    this.h = b;\n    this.a = new G(\"-\");\n    this.j = !1 !== b.events;\n    this.g = !1 !== b.classes;\n  }\n\n  function ia(a) {\n    a.g && w(a.f, [a.a.c(\"wf\", \"loading\")]);\n    L(a, \"loading\");\n  }\n\n  function M(a) {\n    if (a.g) {\n      var b = y(a.f, a.a.c(\"wf\", \"active\")),\n          c = [],\n          d = [a.a.c(\"wf\", \"loading\")];\n      b || c.push(a.a.c(\"wf\", \"inactive\"));\n      w(a.f, c, d);\n    }\n\n    L(a, \"inactive\");\n  }\n\n  function L(a, b, c) {\n    if (a.j && a.h[b]) if (c) a.h[b](c.c, K(c));else a.h[b]();\n  }\n\n  ;\n\n  function ja() {\n    this.c = {};\n  }\n\n  function ka(a, b, c) {\n    var d = [],\n        e;\n\n    for (e in b) {\n      if (b.hasOwnProperty(e)) {\n        var f = a.c[e];\n        f && d.push(f(b[e], c));\n      }\n    }\n\n    return d;\n  }\n\n  ;\n\n  function N(a, b) {\n    this.c = a;\n    this.f = b;\n    this.a = t(this.c, \"span\", {\n      \"aria-hidden\": \"true\"\n    }, this.f);\n  }\n\n  function O(a) {\n    u(a.c, \"body\", a.a);\n  }\n\n  function P(a) {\n    return \"display:block;position:absolute;top:-9999px;left:-9999px;font-size:300px;width:auto;height:auto;line-height:normal;margin:0;padding:0;font-variant:normal;white-space:nowrap;font-family:\" + J(a.c) + \";\" + (\"font-style:\" + I(a) + \";font-weight:\" + (a.f + \"00\") + \";\");\n  }\n\n  ;\n\n  function Q(a, b, c, d, e, f) {\n    this.g = a;\n    this.j = b;\n    this.a = d;\n    this.c = c;\n    this.f = e || 3E3;\n    this.h = f || void 0;\n  }\n\n  Q.prototype.start = function () {\n    var a = this.c.m.document,\n        b = this,\n        c = q(),\n        d = new Promise(function (d, e) {\n      function k() {\n        q() - c >= b.f ? e() : a.fonts.load(fa(b.a), b.h).then(function (a) {\n          1 <= a.length ? d() : setTimeout(k, 25);\n        }, function () {\n          e();\n        });\n      }\n\n      k();\n    }),\n        e = new Promise(function (a, d) {\n      setTimeout(d, b.f);\n    });\n    Promise.race([e, d]).then(function () {\n      b.g(b.a);\n    }, function () {\n      b.j(b.a);\n    });\n  };\n\n  function R(a, b, c, d, e, f, g) {\n    this.v = a;\n    this.B = b;\n    this.c = c;\n    this.a = d;\n    this.s = g || \"BESbswy\";\n    this.f = {};\n    this.w = e || 3E3;\n    this.u = f || null;\n    this.o = this.j = this.h = this.g = null;\n    this.g = new N(this.c, this.s);\n    this.h = new N(this.c, this.s);\n    this.j = new N(this.c, this.s);\n    this.o = new N(this.c, this.s);\n    a = new H(this.a.c + \",serif\", K(this.a));\n    a = P(a);\n    this.g.a.style.cssText = a;\n    a = new H(this.a.c + \",sans-serif\", K(this.a));\n    a = P(a);\n    this.h.a.style.cssText = a;\n    a = new H(\"serif\", K(this.a));\n    a = P(a);\n    this.j.a.style.cssText = a;\n    a = new H(\"sans-serif\", K(this.a));\n    a = P(a);\n    this.o.a.style.cssText = a;\n    O(this.g);\n    O(this.h);\n    O(this.j);\n    O(this.o);\n  }\n\n  var S = {\n    D: \"serif\",\n    C: \"sans-serif\"\n  },\n      T = null;\n\n  function U() {\n    if (null === T) {\n      var a = /AppleWebKit\\/([0-9]+)(?:\\.([0-9]+))/.exec(window.navigator.userAgent);\n      T = !!a && (536 > parseInt(a[1], 10) || 536 === parseInt(a[1], 10) && 11 >= parseInt(a[2], 10));\n    }\n\n    return T;\n  }\n\n  R.prototype.start = function () {\n    this.f.serif = this.j.a.offsetWidth;\n    this.f[\"sans-serif\"] = this.o.a.offsetWidth;\n    this.A = q();\n    la(this);\n  };\n\n  function ma(a, b, c) {\n    for (var d in S) {\n      if (S.hasOwnProperty(d) && b === a.f[S[d]] && c === a.f[S[d]]) return !0;\n    }\n\n    return !1;\n  }\n\n  function la(a) {\n    var b = a.g.a.offsetWidth,\n        c = a.h.a.offsetWidth,\n        d;\n    (d = b === a.f.serif && c === a.f[\"sans-serif\"]) || (d = U() && ma(a, b, c));\n    d ? q() - a.A >= a.w ? U() && ma(a, b, c) && (null === a.u || a.u.hasOwnProperty(a.a.c)) ? V(a, a.v) : V(a, a.B) : na(a) : V(a, a.v);\n  }\n\n  function na(a) {\n    setTimeout(p(function () {\n      la(this);\n    }, a), 50);\n  }\n\n  function V(a, b) {\n    setTimeout(p(function () {\n      v(this.g.a);\n      v(this.h.a);\n      v(this.j.a);\n      v(this.o.a);\n      b(this.a);\n    }, a), 0);\n  }\n\n  ;\n\n  function W(a, b, c) {\n    this.c = a;\n    this.a = b;\n    this.f = 0;\n    this.o = this.j = !1;\n    this.s = c;\n  }\n\n  var X = null;\n\n  W.prototype.g = function (a) {\n    var b = this.a;\n    b.g && w(b.f, [b.a.c(\"wf\", a.c, K(a).toString(), \"active\")], [b.a.c(\"wf\", a.c, K(a).toString(), \"loading\"), b.a.c(\"wf\", a.c, K(a).toString(), \"inactive\")]);\n    L(b, \"fontactive\", a);\n    this.o = !0;\n    oa(this);\n  };\n\n  W.prototype.h = function (a) {\n    var b = this.a;\n\n    if (b.g) {\n      var c = y(b.f, b.a.c(\"wf\", a.c, K(a).toString(), \"active\")),\n          d = [],\n          e = [b.a.c(\"wf\", a.c, K(a).toString(), \"loading\")];\n      c || d.push(b.a.c(\"wf\", a.c, K(a).toString(), \"inactive\"));\n      w(b.f, d, e);\n    }\n\n    L(b, \"fontinactive\", a);\n    oa(this);\n  };\n\n  function oa(a) {\n    0 == --a.f && a.j && (a.o ? (a = a.a, a.g && w(a.f, [a.a.c(\"wf\", \"active\")], [a.a.c(\"wf\", \"loading\"), a.a.c(\"wf\", \"inactive\")]), L(a, \"active\")) : M(a.a));\n  }\n\n  ;\n\n  function pa(a) {\n    this.j = a;\n    this.a = new ja();\n    this.h = 0;\n    this.f = this.g = !0;\n  }\n\n  pa.prototype.load = function (a) {\n    this.c = new ca(this.j, a.context || this.j);\n    this.g = !1 !== a.events;\n    this.f = !1 !== a.classes;\n    qa(this, new ha(this.c, a), a);\n  };\n\n  function ra(a, b, c, d, e) {\n    var f = 0 == --a.h;\n    (a.f || a.g) && setTimeout(function () {\n      var a = e || null,\n          k = d || null || {};\n      if (0 === c.length && f) M(b.a);else {\n        b.f += c.length;\n        f && (b.j = f);\n        var h,\n            m = [];\n\n        for (h = 0; h < c.length; h++) {\n          var l = c[h],\n              n = k[l.c],\n              r = b.a,\n              x = l;\n          r.g && w(r.f, [r.a.c(\"wf\", x.c, K(x).toString(), \"loading\")]);\n          L(r, \"fontloading\", x);\n          r = null;\n          null === X && (X = window.FontFace ? (x = /Gecko.*Firefox\\/(\\d+)/.exec(window.navigator.userAgent)) ? 42 < parseInt(x[1], 10) : !0 : !1);\n          X ? r = new Q(p(b.g, b), p(b.h, b), b.c, l, b.s, n) : r = new R(p(b.g, b), p(b.h, b), b.c, l, b.s, a, n);\n          m.push(r);\n        }\n\n        for (h = 0; h < m.length; h++) {\n          m[h].start();\n        }\n      }\n    }, 0);\n  }\n\n  function qa(a, b, c) {\n    var d = [],\n        e = c.timeout;\n    ia(b);\n    var d = ka(a.a, c, a.c),\n        f = new W(a.c, b, e);\n    a.h = d.length;\n    b = 0;\n\n    for (c = d.length; b < c; b++) {\n      d[b].load(function (b, d, c) {\n        ra(a, f, b, d, c);\n      });\n    }\n  }\n\n  ;\n\n  function sa(a, b) {\n    this.c = a;\n    this.a = b;\n  }\n\n  function ta(a, b, c) {\n    var d = z(a.c);\n    a = (a.a.api || \"fast.fonts.net/jsapi\").replace(/^.*http(s?):(\\/\\/)?/, \"\");\n    return d + \"//\" + a + \"/\" + b + \".js\" + (c ? \"?v=\" + c : \"\");\n  }\n\n  sa.prototype.load = function (a) {\n    function b() {\n      if (f[\"__mti_fntLst\" + d]) {\n        var c = f[\"__mti_fntLst\" + d](),\n            e = [],\n            h;\n        if (c) for (var m = 0; m < c.length; m++) {\n          var l = c[m].fontfamily;\n          void 0 != c[m].fontStyle && void 0 != c[m].fontWeight ? (h = c[m].fontStyle + c[m].fontWeight, e.push(new H(l, h))) : e.push(new H(l));\n        }\n        a(e);\n      } else setTimeout(function () {\n        b();\n      }, 50);\n    }\n\n    var c = this,\n        d = c.a.projectId,\n        e = c.a.version;\n\n    if (d) {\n      var f = c.c.m;\n      B(this.c, ta(c, d, e), function (e) {\n        e ? a([]) : (f[\"__MonotypeConfiguration__\" + d] = function () {\n          return c.a;\n        }, b());\n      }).id = \"__MonotypeAPIScript__\" + d;\n    } else a([]);\n  };\n\n  function ua(a, b) {\n    this.c = a;\n    this.a = b;\n  }\n\n  ua.prototype.load = function (a) {\n    var b,\n        c,\n        d = this.a.urls || [],\n        e = this.a.families || [],\n        f = this.a.testStrings || {},\n        g = new C();\n    b = 0;\n\n    for (c = d.length; b < c; b++) {\n      A(this.c, d[b], D(g));\n    }\n\n    var k = [];\n    b = 0;\n\n    for (c = e.length; b < c; b++) {\n      if (d = e[b].split(\":\"), d[1]) for (var h = d[1].split(\",\"), m = 0; m < h.length; m += 1) {\n        k.push(new H(d[0], h[m]));\n      } else k.push(new H(d[0]));\n    }\n\n    F(g, function () {\n      a(k, f);\n    });\n  };\n\n  function va(a, b, c) {\n    a ? this.c = a : this.c = b + wa;\n    this.a = [];\n    this.f = [];\n    this.g = c || \"\";\n  }\n\n  var wa = \"//fonts.googleapis.com/css\";\n\n  function xa(a, b) {\n    for (var c = b.length, d = 0; d < c; d++) {\n      var e = b[d].split(\":\");\n      3 == e.length && a.f.push(e.pop());\n      var f = \"\";\n      2 == e.length && \"\" != e[1] && (f = \":\");\n      a.a.push(e.join(f));\n    }\n  }\n\n  function ya(a) {\n    if (0 == a.a.length) throw Error(\"No fonts to load!\");\n    if (-1 != a.c.indexOf(\"kit=\")) return a.c;\n\n    for (var b = a.a.length, c = [], d = 0; d < b; d++) {\n      c.push(a.a[d].replace(/ /g, \"+\"));\n    }\n\n    b = a.c + \"?family=\" + c.join(\"%7C\");\n    0 < a.f.length && (b += \"&subset=\" + a.f.join(\",\"));\n    0 < a.g.length && (b += \"&text=\" + encodeURIComponent(a.g));\n    return b;\n  }\n\n  ;\n\n  function za(a) {\n    this.f = a;\n    this.a = [];\n    this.c = {};\n  }\n\n  var Aa = {\n    latin: \"BESbswy\",\n    \"latin-ext\": \"\\xE7\\xF6\\xFC\\u011F\\u015F\",\n    cyrillic: \"\\u0439\\u044F\\u0416\",\n    greek: \"\\u03B1\\u03B2\\u03A3\",\n    khmer: \"\\u1780\\u1781\\u1782\",\n    Hanuman: \"\\u1780\\u1781\\u1782\"\n  },\n      Ba = {\n    thin: \"1\",\n    extralight: \"2\",\n    \"extra-light\": \"2\",\n    ultralight: \"2\",\n    \"ultra-light\": \"2\",\n    light: \"3\",\n    regular: \"4\",\n    book: \"4\",\n    medium: \"5\",\n    \"semi-bold\": \"6\",\n    semibold: \"6\",\n    \"demi-bold\": \"6\",\n    demibold: \"6\",\n    bold: \"7\",\n    \"extra-bold\": \"8\",\n    extrabold: \"8\",\n    \"ultra-bold\": \"8\",\n    ultrabold: \"8\",\n    black: \"9\",\n    heavy: \"9\",\n    l: \"3\",\n    r: \"4\",\n    b: \"7\"\n  },\n      Ca = {\n    i: \"i\",\n    italic: \"i\",\n    n: \"n\",\n    normal: \"n\"\n  },\n      Da = /^(thin|(?:(?:extra|ultra)-?)?light|regular|book|medium|(?:(?:semi|demi|extra|ultra)-?)?bold|black|heavy|l|r|b|[1-9]00)?(n|i|normal|italic)?$/;\n\n  function Ea(a) {\n    for (var b = a.f.length, c = 0; c < b; c++) {\n      var d = a.f[c].split(\":\"),\n          e = d[0].replace(/\\+/g, \" \"),\n          f = [\"n4\"];\n\n      if (2 <= d.length) {\n        var g;\n        var k = d[1];\n        g = [];\n        if (k) for (var k = k.split(\",\"), h = k.length, m = 0; m < h; m++) {\n          var l;\n          l = k[m];\n\n          if (l.match(/^[\\w-]+$/)) {\n            var n = Da.exec(l.toLowerCase());\n            if (null == n) l = \"\";else {\n              l = n[2];\n              l = null == l || \"\" == l ? \"n\" : Ca[l];\n              n = n[1];\n              if (null == n || \"\" == n) n = \"4\";else var r = Ba[n],\n                  n = r ? r : isNaN(n) ? \"4\" : n.substr(0, 1);\n              l = [l, n].join(\"\");\n            }\n          } else l = \"\";\n\n          l && g.push(l);\n        }\n        0 < g.length && (f = g);\n        3 == d.length && (d = d[2], g = [], d = d ? d.split(\",\") : g, 0 < d.length && (d = Aa[d[0]]) && (a.c[e] = d));\n      }\n\n      a.c[e] || (d = Aa[e]) && (a.c[e] = d);\n\n      for (d = 0; d < f.length; d += 1) {\n        a.a.push(new H(e, f[d]));\n      }\n    }\n  }\n\n  ;\n\n  function Fa(a, b) {\n    this.c = a;\n    this.a = b;\n  }\n\n  var Ga = {\n    Arimo: !0,\n    Cousine: !0,\n    Tinos: !0\n  };\n\n  Fa.prototype.load = function (a) {\n    var b = new C(),\n        c = this.c,\n        d = new va(this.a.api, z(c), this.a.text),\n        e = this.a.families;\n    xa(d, e);\n    var f = new za(e);\n    Ea(f);\n    A(c, ya(d), D(b));\n    F(b, function () {\n      a(f.a, f.c, Ga);\n    });\n  };\n\n  function Ha(a, b) {\n    this.c = a;\n    this.a = b;\n  }\n\n  Ha.prototype.load = function (a) {\n    var b = this.a.id,\n        c = this.c.m;\n    b ? B(this.c, (this.a.api || \"https://use.typekit.net\") + \"/\" + b + \".js\", function (b) {\n      if (b) a([]);else if (c.Typekit && c.Typekit.config && c.Typekit.config.fn) {\n        b = c.Typekit.config.fn;\n\n        for (var e = [], f = 0; f < b.length; f += 2) {\n          for (var g = b[f], k = b[f + 1], h = 0; h < k.length; h++) {\n            e.push(new H(g, k[h]));\n          }\n        }\n\n        try {\n          c.Typekit.load({\n            events: !1,\n            classes: !1,\n            async: !0\n          });\n        } catch (m) {}\n\n        a(e);\n      }\n    }, 2E3) : a([]);\n  };\n\n  function Ia(a, b) {\n    this.c = a;\n    this.f = b;\n    this.a = [];\n  }\n\n  Ia.prototype.load = function (a) {\n    var b = this.f.id,\n        c = this.c.m,\n        d = this;\n    b ? (c.__webfontfontdeckmodule__ || (c.__webfontfontdeckmodule__ = {}), c.__webfontfontdeckmodule__[b] = function (b, c) {\n      for (var g = 0, k = c.fonts.length; g < k; ++g) {\n        var h = c.fonts[g];\n        d.a.push(new H(h.name, ga(\"font-weight:\" + h.weight + \";font-style:\" + h.style)));\n      }\n\n      a(d.a);\n    }, B(this.c, z(this.c) + (this.f.api || \"//f.fontdeck.com/s/css/js/\") + ea(this.c) + \"/\" + b + \".js\", function (b) {\n      b && a([]);\n    })) : a([]);\n  };\n\n  var Y = new pa(window);\n\n  Y.a.c.custom = function (a, b) {\n    return new ua(b, a);\n  };\n\n  Y.a.c.fontdeck = function (a, b) {\n    return new Ia(b, a);\n  };\n\n  Y.a.c.monotype = function (a, b) {\n    return new sa(b, a);\n  };\n\n  Y.a.c.typekit = function (a, b) {\n    return new Ha(b, a);\n  };\n\n  Y.a.c.google = function (a, b) {\n    return new Fa(b, a);\n  };\n\n  var Z = {\n    load: p(Y.load, Y)\n  };\n   true ? !(__WEBPACK_AMD_DEFINE_RESULT__ = (function () {\n    return Z;\n  }).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : undefined;\n})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./assets/source/js/font.js\n");

/***/ }),

/***/ "./assets/source/js/googleTranslate.js":
/*!*********************************************!*\
  !*** ./assets/source/js/googleTranslate.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar googleTranslateLoaded = false;\n/**\n * Translate class\n * @type {Translate}\n */\n\nvar Translate =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Constructor\n   */\n  function Translate() {\n    _classCallCheck(this, Translate);\n\n    var self = this;\n    document.addEventListener('click', function (event) {\n      if (!event.target.matches('.translate-icon-btn')) {\n        return;\n      }\n\n      if (self.shouldLoadScript()) {\n        self.fetchScript();\n      }\n    }, false);\n    document.addEventListener('change', function (event) {\n      if (event.target.matches('select.goog-te-combo')) {\n        var searchParams = new URLSearchParams(window.location.search);\n        searchParams.set('translate', event.target.value);\n        var newRelativePathQuery = window.location.pathname + '?' + searchParams.toString();\n        history.pushState(null, '', newRelativePathQuery);\n        self.rewriteLinks();\n      }\n    }, false);\n\n    if (this.shouldLoadScript()) {\n      this.fetchScript();\n    }\n  }\n  /**\n   * Check if script is loaded\n   * @returns {boolean}\n   */\n\n\n  _createClass(Translate, [{\n    key: \"shouldLoadScript\",\n    value: function shouldLoadScript() {\n      if (googleTranslateLoaded === true) {\n        return false;\n      }\n\n      if (document.location.href.indexOf('translate=') > -1) {\n        return true;\n      }\n\n      return false;\n    }\n    /**\n     * Fetching script from Google\n     */\n\n  }, {\n    key: \"fetchScript\",\n    value: function fetchScript() {\n      var _this = this;\n\n      var loadScript = function loadScript(source, beforeElement) {\n        var async = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n        var defer = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n        return new Promise(function (resolve, reject) {\n          var script = document.createElement('script');\n          var prior = beforeElement || document.getElementsByTagName('script')[0];\n          script.async = async;\n          script.defer = defer;\n\n          function onloadHander(_, isAbort) {\n            if (isAbort || !script.readyState || /loaded|complete/.test(script.readyState)) {\n              script.onload = null;\n              script.onreadystatechange = null;\n              script = undefined;\n\n              if (isAbort) {\n                reject();\n              } else {\n                resolve();\n              }\n            }\n          }\n\n          script.onload = onloadHander;\n          script.onreadystatechange = onloadHander;\n          script.src = source;\n          prior.parentNode.insertBefore(script, prior);\n        });\n      };\n\n      var scriptUrl = '//translate.google.com/translate_a/element.js?cb=googleTranslateElementInit';\n      loadScript(scriptUrl).then(function () {\n        _this.rewriteLinks();\n\n        googleTranslateLoaded = true;\n      }, function () {\n        console.log('Failed to load Translate script from Google!');\n        return false;\n      });\n    }\n    /**\n     *  Rewriting all links\n     */\n\n  }, {\n    key: \"rewriteLinks\",\n    value: function rewriteLinks() {\n      var self = this;\n      [].forEach.call(document.querySelectorAll('a'), function (element) {\n        var hrefUrl = element.getAttribute('href');\n\n        if (hrefUrl == null || hrefUrl.indexOf(location.origin) === -1 || hrefUrl.substr(0, 1) === '#') {\n          return;\n        }\n\n        var searchParams = new URLSearchParams(document.location.search);\n        var changeLang = searchParams.get('translate');\n        hrefUrl = self.parseLinkData(hrefUrl, 'translate', changeLang);\n        element.setAttribute('href', hrefUrl);\n      });\n    }\n    /**\n     * Parsing link with keys and values\n     * @param uri\n     * @param key\n     * @param value\n     * @returns {string|*}\n     */\n\n  }, {\n    key: \"parseLinkData\",\n    value: function parseLinkData(uri, key, value) {\n      var re = new RegExp('([?&])' + key + '=.*?(&|$)', 'i');\n      var separator = uri.indexOf('?') !== -1 ? '&' : '?';\n\n      if (uri.match(re)) {\n        return uri.replace(re, '$1' + key + '=' + value + '$2');\n      }\n\n      return uri + separator + key + '=' + value;\n    }\n  }, {\n    key: \"checkLanguageOnLoad\",\n    value: function checkLanguageOnLoad() {\n      document.addEventListener('DOMContentLoaded', function () {\n        var searchParams = new URLSearchParams(document.location.search);\n        var changeLang = searchParams.get('translate');\n        var ckDomain;\n\n        for (ckDomain = window.location.hostname.split('.'); 2 < ckDomain.length;) {\n          ckDomain.shift();\n        }\n\n        ckDomain = ';domain=' + ckDomain.join('.');\n\n        if (changeLang !== 'sv') {\n          document.cookie = 'googtrans=/sv/' + changeLang + '; expires=Thu, 07-Mar-2047 20:22:40 GMT; path=/' + ckDomain;\n          document.cookie = 'googtrans=/sv/' + changeLang + '; expires=Thu, 07-Mar-2047 20:22:40 GMT; path=/';\n        }\n      });\n    }\n  }]);\n\n  return Translate;\n}();\n\nvar GetTranslate = new Translate();\nGetTranslate.checkLanguageOnLoad();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./assets/source/js/googleTranslate.js\n");

/***/ }),

/***/ "./assets/source/js/mainContainer.js":
/*!*******************************************!*\
  !*** ./assets/source/js/mainContainer.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var Municipio = Municipio || {};\nMunicipio.Helper = Municipio.Helper || {};\n\nMunicipio.Helper.MainContainer = function ($) {\n  function MainContainer() {\n    this.removeMainContainer();\n  }\n\n  MainContainer.prototype.removeMainContainer = function () {\n    if ($.trim($('#main-content').html()) == '') {\n      $('#main-content').remove();\n      return true;\n    }\n\n    return false;\n  };\n\n  return new MainContainer();\n}(jQuery);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hc3NldHMvc291cmNlL2pzL21haW5Db250YWluZXIuanM/ZGZmYSJdLCJuYW1lcyI6WyJNdW5pY2lwaW8iLCJIZWxwZXIiLCJNYWluQ29udGFpbmVyIiwiJCIsInJlbW92ZU1haW5Db250YWluZXIiLCJwcm90b3R5cGUiLCJ0cmltIiwiaHRtbCIsInJlbW92ZSIsImpRdWVyeSJdLCJtYXBwaW5ncyI6IkFBQUEsSUFBSUEsU0FBUyxHQUFHQSxTQUFTLElBQUksRUFBN0I7QUFDQUEsU0FBUyxDQUFDQyxNQUFWLEdBQW1CRCxTQUFTLENBQUNDLE1BQVYsSUFBb0IsRUFBdkM7O0FBRUFELFNBQVMsQ0FBQ0MsTUFBVixDQUFpQkMsYUFBakIsR0FBa0MsVUFBU0MsQ0FBVCxFQUFZO0FBQzFDLFdBQVNELGFBQVQsR0FBeUI7QUFDckIsU0FBS0UsbUJBQUw7QUFDSDs7QUFFREYsZUFBYSxDQUFDRyxTQUFkLENBQXdCRCxtQkFBeEIsR0FBOEMsWUFBVztBQUNyRCxRQUFJRCxDQUFDLENBQUNHLElBQUYsQ0FBT0gsQ0FBQyxDQUFDLGVBQUQsQ0FBRCxDQUFtQkksSUFBbkIsRUFBUCxLQUFxQyxFQUF6QyxFQUE2QztBQUN6Q0osT0FBQyxDQUFDLGVBQUQsQ0FBRCxDQUFtQkssTUFBbkI7QUFDQSxhQUFPLElBQVA7QUFDSDs7QUFDRCxXQUFPLEtBQVA7QUFDSCxHQU5EOztBQVFBLFNBQU8sSUFBSU4sYUFBSixFQUFQO0FBQ0gsQ0FkZ0MsQ0FjOUJPLE1BZDhCLENBQWpDIiwiZmlsZSI6Ii4vYXNzZXRzL3NvdXJjZS9qcy9tYWluQ29udGFpbmVyLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIE11bmljaXBpbyA9IE11bmljaXBpbyB8fCB7fTtcbk11bmljaXBpby5IZWxwZXIgPSBNdW5pY2lwaW8uSGVscGVyIHx8IHt9O1xuXG5NdW5pY2lwaW8uSGVscGVyLk1haW5Db250YWluZXIgPSAoZnVuY3Rpb24oJCkge1xuICAgIGZ1bmN0aW9uIE1haW5Db250YWluZXIoKSB7XG4gICAgICAgIHRoaXMucmVtb3ZlTWFpbkNvbnRhaW5lcigpO1xuICAgIH1cblxuICAgIE1haW5Db250YWluZXIucHJvdG90eXBlLnJlbW92ZU1haW5Db250YWluZXIgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgaWYgKCQudHJpbSgkKCcjbWFpbi1jb250ZW50JykuaHRtbCgpKSA9PSAnJykge1xuICAgICAgICAgICAgJCgnI21haW4tY29udGVudCcpLnJlbW92ZSgpO1xuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH07XG5cbiAgICByZXR1cm4gbmV3IE1haW5Db250YWluZXIoKTtcbn0pKGpRdWVyeSk7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./assets/source/js/mainContainer.js\n");

/***/ }),

/***/ 1:
/*!******************************************************************************************************************************************************************************************************************************************************************!*\
  !*** multi ./assets/source/js/algolia-autocomplete.js ./assets/source/js/algolia-instantsearch.js ./assets/source/js/app.js ./assets/source/js/comments.js ./assets/source/js/font.js ./assets/source/js/googleTranslate.js ./assets/source/js/mainContainer.js ***!
  \******************************************************************************************************************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! ./assets/source/js/algolia-autocomplete.js */"./assets/source/js/algolia-autocomplete.js");
__webpack_require__(/*! ./assets/source/js/algolia-instantsearch.js */"./assets/source/js/algolia-instantsearch.js");
__webpack_require__(/*! ./assets/source/js/app.js */"./assets/source/js/app.js");
__webpack_require__(/*! ./assets/source/js/comments.js */"./assets/source/js/comments.js");
__webpack_require__(/*! ./assets/source/js/font.js */"./assets/source/js/font.js");
__webpack_require__(/*! ./assets/source/js/googleTranslate.js */"./assets/source/js/googleTranslate.js");
module.exports = __webpack_require__(/*! ./assets/source/js/mainContainer.js */"./assets/source/js/mainContainer.js");


/***/ })

/******/ });
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOzs7QUFHQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0Esa0RBQTBDLGdDQUFnQztBQUMxRTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLGdFQUF3RCxrQkFBa0I7QUFDMUU7QUFDQSx5REFBaUQsY0FBYztBQUMvRDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaURBQXlDLGlDQUFpQztBQUMxRSx3SEFBZ0gsbUJBQW1CLEVBQUU7QUFDckk7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxtQ0FBMkIsMEJBQTBCLEVBQUU7QUFDdkQseUNBQWlDLGVBQWU7QUFDaEQ7QUFDQTtBQUNBOztBQUVBO0FBQ0EsOERBQXNELCtEQUErRDs7QUFFckg7QUFDQTs7O0FBR0E7QUFDQSIsImZpbGUiOiJqcy9hcHAuanMiLCJzb3VyY2VzQ29udGVudCI6WyIgXHQvLyBUaGUgbW9kdWxlIGNhY2hlXG4gXHR2YXIgaW5zdGFsbGVkTW9kdWxlcyA9IHt9O1xuXG4gXHQvLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuIFx0ZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXG4gXHRcdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuIFx0XHRpZihpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSkge1xuIFx0XHRcdHJldHVybiBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXS5leHBvcnRzO1xuIFx0XHR9XG4gXHRcdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG4gXHRcdHZhciBtb2R1bGUgPSBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSA9IHtcbiBcdFx0XHRpOiBtb2R1bGVJZCxcbiBcdFx0XHRsOiBmYWxzZSxcbiBcdFx0XHRleHBvcnRzOiB7fVxuIFx0XHR9O1xuXG4gXHRcdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuIFx0XHRtb2R1bGVzW21vZHVsZUlkXS5jYWxsKG1vZHVsZS5leHBvcnRzLCBtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuIFx0XHQvLyBGbGFnIHRoZSBtb2R1bGUgYXMgbG9hZGVkXG4gXHRcdG1vZHVsZS5sID0gdHJ1ZTtcblxuIFx0XHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuIFx0XHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG4gXHR9XG5cblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGVzIG9iamVjdCAoX193ZWJwYWNrX21vZHVsZXNfXylcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubSA9IG1vZHVsZXM7XG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlIGNhY2hlXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmMgPSBpbnN0YWxsZWRNb2R1bGVzO1xuXG4gXHQvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9uIGZvciBoYXJtb255IGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uZCA9IGZ1bmN0aW9uKGV4cG9ydHMsIG5hbWUsIGdldHRlcikge1xuIFx0XHRpZighX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIG5hbWUpKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIG5hbWUsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBnZXR0ZXIgfSk7XG4gXHRcdH1cbiBcdH07XG5cbiBcdC8vIGRlZmluZSBfX2VzTW9kdWxlIG9uIGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uciA9IGZ1bmN0aW9uKGV4cG9ydHMpIHtcbiBcdFx0aWYodHlwZW9mIFN5bWJvbCAhPT0gJ3VuZGVmaW5lZCcgJiYgU3ltYm9sLnRvU3RyaW5nVGFnKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFN5bWJvbC50b1N0cmluZ1RhZywgeyB2YWx1ZTogJ01vZHVsZScgfSk7XG4gXHRcdH1cbiBcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcbiBcdH07XG5cbiBcdC8vIGNyZWF0ZSBhIGZha2UgbmFtZXNwYWNlIG9iamVjdFxuIFx0Ly8gbW9kZSAmIDE6IHZhbHVlIGlzIGEgbW9kdWxlIGlkLCByZXF1aXJlIGl0XG4gXHQvLyBtb2RlICYgMjogbWVyZ2UgYWxsIHByb3BlcnRpZXMgb2YgdmFsdWUgaW50byB0aGUgbnNcbiBcdC8vIG1vZGUgJiA0OiByZXR1cm4gdmFsdWUgd2hlbiBhbHJlYWR5IG5zIG9iamVjdFxuIFx0Ly8gbW9kZSAmIDh8MTogYmVoYXZlIGxpa2UgcmVxdWlyZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy50ID0gZnVuY3Rpb24odmFsdWUsIG1vZGUpIHtcbiBcdFx0aWYobW9kZSAmIDEpIHZhbHVlID0gX193ZWJwYWNrX3JlcXVpcmVfXyh2YWx1ZSk7XG4gXHRcdGlmKG1vZGUgJiA4KSByZXR1cm4gdmFsdWU7XG4gXHRcdGlmKChtb2RlICYgNCkgJiYgdHlwZW9mIHZhbHVlID09PSAnb2JqZWN0JyAmJiB2YWx1ZSAmJiB2YWx1ZS5fX2VzTW9kdWxlKSByZXR1cm4gdmFsdWU7XG4gXHRcdHZhciBucyA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gXHRcdF9fd2VicGFja19yZXF1aXJlX18ucihucyk7XG4gXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShucywgJ2RlZmF1bHQnLCB7IGVudW1lcmFibGU6IHRydWUsIHZhbHVlOiB2YWx1ZSB9KTtcbiBcdFx0aWYobW9kZSAmIDIgJiYgdHlwZW9mIHZhbHVlICE9ICdzdHJpbmcnKSBmb3IodmFyIGtleSBpbiB2YWx1ZSkgX193ZWJwYWNrX3JlcXVpcmVfXy5kKG5zLCBrZXksIGZ1bmN0aW9uKGtleSkgeyByZXR1cm4gdmFsdWVba2V5XTsgfS5iaW5kKG51bGwsIGtleSkpO1xuIFx0XHRyZXR1cm4gbnM7XG4gXHR9O1xuXG4gXHQvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5uID0gZnVuY3Rpb24obW9kdWxlKSB7XG4gXHRcdHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuIFx0XHRcdGZ1bmN0aW9uIGdldERlZmF1bHQoKSB7IHJldHVybiBtb2R1bGVbJ2RlZmF1bHQnXTsgfSA6XG4gXHRcdFx0ZnVuY3Rpb24gZ2V0TW9kdWxlRXhwb3J0cygpIHsgcmV0dXJuIG1vZHVsZTsgfTtcbiBcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgJ2EnLCBnZXR0ZXIpO1xuIFx0XHRyZXR1cm4gZ2V0dGVyO1xuIFx0fTtcblxuIFx0Ly8gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSBmdW5jdGlvbihvYmplY3QsIHByb3BlcnR5KSB7IHJldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqZWN0LCBwcm9wZXJ0eSk7IH07XG5cbiBcdC8vIF9fd2VicGFja19wdWJsaWNfcGF0aF9fXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnAgPSBcIlwiO1xuXG5cbiBcdC8vIExvYWQgZW50cnkgbW9kdWxlIGFuZCByZXR1cm4gZXhwb3J0c1xuIFx0cmV0dXJuIF9fd2VicGFja19yZXF1aXJlX18oX193ZWJwYWNrX3JlcXVpcmVfXy5zID0gMSk7XG4iXSwic291cmNlUm9vdCI6IiJ9